{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","userId","App","useState","todosFromServer","setTodos","setTitle","hasTitleError","setHasTitleError","selectUser","setSelectUser","hasSelectUserError","setHasSelectUserError","defaultTodos","usersFromServer","find","action","method","onSubmit","event","todosArr","preventDefault","trim","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24d757fa.chunk.js","sourcesContent":["import React from 'react';\nimport { TodowithUser } from '../types';\n\ntype Props = {\n  user: TodowithUser['user']; // User\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n// import { UserInfo } from '../UserInfo';\nimport React from 'react';\nimport { TodowithUser } from '../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodowithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed = false,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodowithUser } from '../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodowithUser[];\n  // users: User[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n          // user={todo}\n        />\n      ))}\n\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo, User } from './components/types';\n\nconst findById = (id:number) => {\n  return usersFromServer.find(user => user.id === id) as User;\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [selectUser, setSelectUser] = useState(0);\n  const [hasSelectUserError, setHasSelectUserError] = useState(false);\n\n  const defaultTodos = todos.map(todo => {\n    return {\n      ...todo,\n      user: findById(todo.userId),\n    };\n  });\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setSelectUser(0);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectUser(+event.target.value);\n    setHasSelectUserError(false);\n  };\n\n  const todoId = (todosArr:Todo[]) => {\n    const maxId = Math.max(\n      ...todosArr.map(todo => todo.id),\n    );\n\n    return maxId + 1;\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!title.trim()) {\n      setTitle('');\n      setHasTitleError(true);\n    }\n\n    if (!selectUser) {\n      setHasSelectUserError(true);\n    }\n\n    if (title.trim() && selectUser) {\n      setTodos([\n        ...todos,\n        {\n          id: todoId(todos),\n          title,\n          completed: false,\n          userId: selectUser,\n        },\n      ]);\n      reset();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <span>Title: </span>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <span>User: </span>\n          <select\n            data-cy=\"userSelect\"\n            value={selectUser}\n            onChange={handleSelectChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasSelectUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={defaultTodos}\n        // users={usersFromServer}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}